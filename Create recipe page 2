import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';

class CreateRecipePage extends StatefulWidget {
  @override
  _CreateRecipePageState createState() => _CreateRecipePageState();
}

class _CreateRecipePageState extends State<CreateRecipePage> {
  final TextEditingController _nameController = TextEditingController();
  final TextEditingController _ingredientsController = TextEditingController();
  
  String _selectedAllergy = 'None';
  String _selectedFoodPreference = 'None';
  String _selectedFoodType = 'Main';

  final List<String> allergyOptions = ['None', 'Gluten', 'Peanut', 'Dairy', 'Seafood', 'Soy', 'Egg'];
  final List<String> foodPreferences = ['None', 'Vegan', 'Vegetarian', 'Keto', 'Low Carb', 'High Protein'];
  final List<String> foodTypes = ['Appetizer', 'Main', 'Dessert', 'Snack', 'Pastry', 'Bread'];

  void _saveRecipe() async {
    if (_nameController.text.isEmpty || _ingredientsController.text.isEmpty) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("Please fill all fields")),
      );
      return;
    }

    try {
      await FirebaseFirestore.instance.collection('recipes').add({
        'name': _nameController.text,
        'ingredients': _ingredientsController.text,
        'allergy': _selectedAllergy,
        'foodPreference': _selectedFoodPreference,
        'foodType': _selectedFoodType,
        'createdAt': FieldValue.serverTimestamp(),
      });

      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("Recipe Saved Successfully!")),
      );

      Navigator.pop(context); // بازگشت به صفحه قبلی بعد از ذخیره
    } catch (e) {
      print("Error saving recipe: $e");
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("Failed to save recipe!")),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Create Recipe'),
        backgroundColor: Color(0xFF2B4D3C),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            TextField(
              controller: _nameController,
              decoration: InputDecoration(labelText: 'Recipe Name'),
            ),
            SizedBox(height: 10),
            TextField(
              controller: _ingredientsController,
              decoration: InputDecoration(labelText: 'Ingredients (comma separated)'),
            ),
            SizedBox(height: 10),

            // انتخاب نوع آلرژی
            DropdownButtonFormField<String>(
              value: _selectedAllergy,
              onChanged: (String? newValue) {
                setState(() {
                  _selectedAllergy = newValue!;
                });
              },
              items: allergyOptions.map((String value) {
                return DropdownMenuItem<String>(
                  value: value,
                  child: Text(value),
                );
              }).toList(),
              decoration: InputDecoration(labelText: 'Select Allergy Type'),
            ),
            SizedBox(height: 10),

            // انتخاب ترجیحات غذایی
            DropdownButtonFormField<String>(
              value: _selectedFoodPreference,
              onChanged: (String? newValue) {
                setState(() {
                  _selectedFoodPreference = newValue!;
                });
              },
              items: foodPreferences.map((String value) {
                return DropdownMenuItem<String>(
                  value: value,
                  child: Text(value),
                );
              }).toList(),
              decoration: InputDecoration(labelText: 'Select Food Preference'),
            ),
            SizedBox(height: 10),

            // انتخاب نوع غذا
            DropdownButtonFormField<String>(
              value: _selectedFoodType,
              onChanged: (String? newValue) {
                setState(() {
                  _selectedFoodType = newValue!;
                });
              },
              items: foodTypes.map((String value) {
                return DropdownMenuItem<String>(
                  value: value,
                  child: Text(value),
                );
              }).toList(),
              decoration: InputDecoration(labelText: 'Select Food Type'),
            ),
            SizedBox(height: 20),

            // دکمه ذخیره رسپی
            ElevatedButton(
              onPressed: _saveRecipe,
              style: ElevatedButton.styleFrom(
                backgroundColor: Color(0xFF2B4D3C),
              ),
              child: Text('Save Recipe', style: TextStyle(color: Colors.white)),
            ),
          ],
        ),
      ),
    );
  }
}
